{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/my-todo/my-todo.component.html","./src/app/my-todo/my-todo.component.ts","./src/app/app.module.ts","./src/app/git-repos/git-repos.component.ts","./src/app/git-repos/git-repos.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,2CAA2C,CAAC;KACrD;;wEAFY,YAAY;4FAAZ,YAAY;;;;;;;;;;;;;;;;;;;;;;ICCb,qEAAiC;IAC7B,sEAAK;IACD,wEAAO;IAAA,uDAAQ;IAAA,4DAAQ;IAC3B,4DAAM;IACV,4DAAK;;;IAFU,0DAAQ;IAAR,wEAAQ;;;IAJ/B,0EAAoC;IAChC,qEAAI;IACA,mHAIK;IACT,4DAAK;IACT,4DAAU;;;IANmB,0DAAU;IAAV,mFAAU;;;IAOvC,yEAAmC;IAC/B,uEAAM;IACF,yEAAQ;IAAA,uDAAkB;IAAA,4DAAS;IAAC,uDACxC;IAAA,4DAAO;IACX,4DAAS;;;IAFO,0DAAkB;IAAlB,sFAAkB;IAAU,0DACxC;IADwC,8HACxC;;ACVD,MAAM,eAAe;IAGxB;QAFA,YAAO,GAAa,EAAE,CAAC;IAEP,CAAC;IAEjB,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;;8EAZQ,eAAe;+FAAf,eAAe;QDR5B,0EAAS;QACL,yEAAQ;QACJ,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,2EAAmG;QAAlD,oLAAqB,0FAAgB,eAAW,IAA3B;QAAtE,4DAAmG;QACvG,4DAAS;QACT,gEAAM;QACN,mHAQU;QACV,iHAIS;QACb,4DAAU;;QAjB+C,0DAAqB;QAArB,gFAAqB;QAGhE,0DAAwB;QAAxB,wFAAwB;QASzB,0DAAwB;QAAxB,wFAAwB;;;;;;;;;;;;;;AEdrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACa;AACF;AACA;AAET;AACe;AACM;;AAiB7D,MAAM,SAAS;IAClB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,aAAa;QACT,MAAM,YAAY,GAAG,6EAAmB,CAAC,0EAAe,EAAE;YACtD,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;QACH,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QAEtD,MAAM,WAAW,GAAG,6EAAmB,CAAC,gFAAiB,EAAE;YACvD,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;QACH,cAAc,CAAC,MAAM,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;IACvD,CAAC;;kEAbQ,SAAS;wFAAT,SAAS;6FAJT,EAAE,YALJ;YACL,uEAAa;YACb,0DAAW;YACX,qEAAgB;SACnB;mIAKU,SAAS,mBAblB,2DAAY;QACZ,0EAAe;QACf,gFAAiB,aAGf,uEAAa;QACb,0DAAW;QACX,qEAAgB;;;;;;;;;;;;;ACjBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;;;ICMzB,qEAAkC;IAC9B,sEAAK;IACD,wEAAO;IAAA,uDAAoC;IAAA,4DAAQ;IACvD,4DAAM;IACV,4DAAK;;;IAFU,0DAAoC;IAApC,kHAAoC;;ADCxD,MAAM,iBAAiB;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,QAAQ,KAAK,CAAC;IAEd,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,IAAI,CAAC,QAAQ,QAAQ,CAAC;YAChE,IAAI,CACA,0DAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAC7B;YACI,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,UAAU,EAAE,CAAC,CAAC,gBAAgB;SAEjC,EAAC,CAAC,CAAC;aACX,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;;kFAnBQ,iBAAiB;iGAAjB,iBAAiB;QCX9B,0EAAS;QACL,yEAAQ;QACJ,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QACjC,2EAA8G;QAAzD,uLAAsB,4FAAgB,qBAAiB,IAAjC;QAA3E,4DAA8G;QAClH,4DAAS;QACT,gEAAM;QACN,0EAAS;QACL,qEAAI;QACA,2GAIK;QACT,4DAAK;QACT,4DAAU;QACd,4DAAU;;QAZmD,0DAAsB;QAAtB,iFAAsB;QAKlD,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;ACRG;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ``,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Angular Custom Elements in ASP.NET Core 5';\n}\n","<section>\r\n    <header>\r\n        <h3>My Todos</h3>\r\n        <input placeholder=\"Type in a TODO\" autofocus=\"\" [(ngModel)]=\"newTodo\" (keyup.enter)=\"addMyTodo()\">\r\n    </header>\r\n    <br />\r\n    <section *ngIf=\"myTodos.length > 0\">\r\n        <ul>\r\n            <li *ngFor=\"let todo of myTodos\">\r\n                <div>\r\n                    <label>{{todo}}</label>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </section>\r\n    <footer *ngIf=\"myTodos.length > 0\">\r\n        <span>\r\n            <strong>{{myTodos.length}}</strong> {{myTodos.length == 1 ? 'item' : 'items'}} left\r\n        </span>\r\n    </footer>\r\n</section>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n    selector: \"app-my-todo\",\n    templateUrl: \"./my-todo.component.html\",\n    styleUrls: [\"./my-todo.component.css\"]    \n})\nexport class MyTodoComponent implements OnInit {\n    myTodos: string[] = [];\n    newTodo: string;\n    constructor() { }\n\n    ngOnInit() {\n        this.myTodos = [\"Pay Bills\", \"Clean Car\", \"Pay Taxes\"];\n    }\n\n    addMyTodo() {\n        this.myTodos.push(this.newTodo);\n        this.newTodo = \"\";\n    }\n}","import { NgModule, Injector } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\nimport { createCustomElement } from \"@angular/elements\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\nimport { AppComponent } from './app.component';\nimport { MyTodoComponent } from './my-todo/my-todo.component';\nimport { GitReposComponent } from './git-repos/git-repos.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyTodoComponent,\n    GitReposComponent\n  ],\n  imports: [\n      BrowserModule,\n      FormsModule,\n      HttpClientModule\n  ],\n  providers: [],\n  entryComponents: [MyTodoComponent]\r\n\n})\nexport class AppModule {\r\n    constructor(private injector: Injector) { }\r\n\r\n    ngDoBootstrap() {\r\n        const myTodoElment = createCustomElement(MyTodoComponent, {\r\n            injector: this.injector\r\n        });\r\n        customElements.define(\"mytodo-element\", myTodoElment);\r\n\r\n        const githubStars = createCustomElement(GitReposComponent, {\r\n            injector: this.injector\r\n        });\r\n        customElements.define(\"github-stars\", githubStars);\r\n    }\r\n}\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { IGitHubRepoStars } from \"./IGitHubRepoStars\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n    selector: \"app-git-repos\",\n    templateUrl: \"./git-repos.component.html\",\n    styleUrls: [\"./git-repos.component.css\"]   \n})\nexport class GitReposComponent implements OnInit {\n    userName: string;\n    gitRepos: Observable<IGitHubRepoStars>;\n    constructor(private http: HttpClient) { }\n\n    ngOnInit() { }\n\n    searchUserRepos() {\n        this.http.get(`https://api.github.com/users/${this.userName}/repos`).\n            pipe(\n                map((item: any) => item.map(p => <IGitHubRepoStars>\n                    {\n                        name: p.name,\n                        starsCount: p.stargazers_count\n\n                    })))\n            .subscribe((data) => {\n                this.gitRepos = data;\n            });\n    }\n}","<section>\r\n    <header>\r\n        <h3>Search Github Repository</h3>\r\n        <input placeholder=\"Type in a username\" autofocus=\"\" [(ngModel)]=\"userName\" (keyup.enter)=\"searchUserRepos()\">\r\n    </header>\r\n    <br />\r\n    <section>\r\n        <ul>\r\n            <li *ngFor=\"let repo of gitRepos\">\r\n                <div>\r\n                    <label>{{repo.name}} -- {{repo.starsCount}}</label>                    \r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </section>\r\n</section>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}